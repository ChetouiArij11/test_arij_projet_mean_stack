{"ast":null,"code":"import { Post } from '../models/post.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PostService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:3000/postApi';\n    this.posts = [new Post('455', 'title1', 'le contenu de 1ere article '), new Post('458', 'title2', 'le contenu de 2eme article '), new Post('522', 'title3', 'le contenu de 3eme article '), new Post('544', 'title4', 'le contenu de 4eme article ')];\n    this.chargerListPost().subscribe(listPost => {\n      console.log(listPost);\n    });\n    this.getPost().subscribe(listPost => {\n      console.log(listPost);\n    });\n  }\n  chargerListPost() {\n    return this.http.get('http://localhost:3000/postApi');\n  }\n  getPost() {\n    return this.http.get(this.url);\n  }\n  addpost(p) {\n    return this.http.post(this.url, p);\n  }\n  getpostbyId(id) {\n    return this.http.get(this.url + id);\n  }\n  updatepost(p) {\n    return this.http.put(this.url + p.id, p);\n  }\n  deletepost(p) {\n    return this.http.delete(this.url + p.id);\n  }\n}\nPostService.ɵfac = function PostService_Factory(t) {\n  return new (t || PostService)(i0.ɵɵinject(i1.HttpClient));\n};\nPostService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PostService,\n  factory: PostService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,IAAI,QAAQ,sBAAsB;;;AAK3C,OAAM,MAAOC,WAAW;EAStBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAPxB,QAAG,GAAG,+BAA+B;IACrC,UAAK,GAAC,CACJ,IAAIH,IAAI,CAAC,KAAK,EAAC,QAAQ,EAAC,6BAA6B,CAAC,EACtD,IAAIA,IAAI,CAAC,KAAK,EAAC,QAAQ,EAAC,6BAA6B,CAAC,EACtD,IAAIA,IAAI,CAAC,KAAK,EAAC,QAAQ,EAAC,6BAA6B,CAAC,EACtD,IAAIA,IAAI,CAAC,KAAK,EAAC,QAAQ,EAAC,6BAA6B,CAAC,CACvD;IAEC,IAAI,CAACI,eAAe,EAAE,CAACC,SAAS,CAAEC,QAAQ,IAAI;MAC5CC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACvB,CAAC,CAAC;IACF,IAAI,CAACG,OAAO,EAAE,CAACJ,SAAS,CAAEC,QAAQ,IAAI;MAAGC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IAAE,CAAC,CAAC;EACpE;EAEAF,eAAe;IACb,OAAO,IAAI,CAACD,IAAI,CAACO,GAAG,CAAS,+BAA+B,CAAC;EAC/D;EAEAD,OAAO;IACL,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAS,IAAI,CAACC,GAAG,CAAC;EACxC;EACAC,OAAO,CAACC,CAAO;IACb,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAS,IAAI,CAACH,GAAG,EAAEE,CAAC,CAAC;EAC5C;EACAE,WAAW,CAACC,EAAU;IACpB,OAAO,IAAI,CAACb,IAAI,CAACO,GAAG,CAAS,IAAI,CAACC,GAAG,GAAGK,EAAE,CAAC;EAC7C;EACAC,UAAU,CAACJ,CAAO;IAChB,OAAO,IAAI,CAACV,IAAI,CAACe,GAAG,CAAM,IAAI,CAACP,GAAG,GAAGE,CAAC,CAACG,EAAE,EAAEH,CAAC,CAAC;EAC/C;EACAM,UAAU,CAACN,CAAO;IAChB,OAAO,IAAI,CAACV,IAAI,CAACiB,MAAM,CAAM,IAAI,CAACT,GAAG,GAAGE,CAAC,CAACG,EAAE,CAAC;EAC/C;;AAlCWf,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAoB,SAAXpB,WAAW;EAAAqB,YAFV;AAAM","names":["Post","PostService","constructor","http","chargerListPost","subscribe","listPost","console","log","getPost","get","url","addpost","p","post","getpostbyId","id","updatepost","put","deletepost","delete","factory","providedIn"],"sourceRoot":"","sources":["D:\\projet\\MEAN_Stack\\test_arij_projet_mean_stack\\src\\app\\services\\post.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Post } from '../models/post.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  url = 'http://localhost:3000/postApi';\n  posts=[\n    new Post('455','title1','le contenu de 1ere article '),\n    new Post('458','title2','le contenu de 2eme article '),\n    new Post('522','title3','le contenu de 3eme article '),\n    new Post('544','title4','le contenu de 4eme article '),\n  ];\n  constructor(private http: HttpClient) {\n    this.chargerListPost().subscribe((listPost) => {\n      console.log(listPost);\n    });\n    this.getPost().subscribe((listPost) => { console.log(listPost); });\n  }\n\n  chargerListPost(): Observable<Post[]> {\n    return this.http.get<Post[]>('http://localhost:3000/postApi');\n  }\n\n  getPost(): Observable<Post[]> {\n    return this.http.get<Post[]>(this.url);\n  }\n  addpost(p: Post): Observable<Post[]> {\n    return this.http.post<Post[]>(this.url, p);\n  }\n  getpostbyId(id: string): Observable<Post[]> {\n    return this.http.get<Post[]>(this.url + id);\n  }\n  updatepost(p: Post): Observable<any> {\n    return this.http.put<any>(this.url + p.id, p);\n  }\n  deletepost(p: Post): Observable<any> {\n    return this.http.delete<any>(this.url + p.id);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}